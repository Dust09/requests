import groovy.json.*

plugins {
    id 'java'
    id 'java-library'
    id 'io.qameta.allure' version '2.8.1'
}
jar.archiveFileName="automated-testing.jar"
group 'ru.cfmc.quota'
version '1.0'

def allureVersion = "2.13.6"
def junit5Version = "5.6.2"
def seleniumVersion = "2.41.0"

def allureProjectID = "quotas"
def allurePathResult = "$projectDir/build/allure-results"


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

allure {
    autoconfigure = true
    aspectjweaver = true
    version = allureVersion

    clean = true

    resultsDir = file(allurePathResult)

    useJUnit5 {
        version = allureVersion
    }
}

test {
    ignoreFailures = true
    useJUnitPlatform {
        maxParallelForks = 1


    }

    systemProperty("junit.jupiter.execution.parallel.enabled", "true")
    systemProperty("junit.jupiter.execution.parallel.config.strategy", "dynamic")
    systemProperty("junit.jupiter.extensions.autodetection.enabled", "true")
}

task task_name(type: Exec) {
    //commandLine 'cmd','gradlew test --rerun-tasks'
    commandLine 'cmd','allureServe'
}


repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation("io.qameta.allure:allure-java-commons:$allureVersion")

    implementation("org.junit.jupiter:junit-jupiter-api:$junit5Version")
    implementation("org.junit.jupiter:junit-jupiter-engine:$junit5Version")
    implementation("org.junit.jupiter:junit-jupiter-params:$junit5Version")

    implementation("org.seleniumhq.selenium:selenium-java:$seleniumVersion")

    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.0'
    implementation ("org.aspectj:aspectjweaver:1.9.6")
    implementation 'io.qameta.allure:allure-junit5-assert:2.13.8'
    implementation 'io.github.artsok:rerunner-jupiter:2.1.6'

    testImplementation("com.codeborne:selenide:5.2.3")

    implementation 'org.codeartisans:org.json:20161124'
}



